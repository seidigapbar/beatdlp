package downloader

import (
	"fmt"
	"time"

	"google.golang.org/api/youtube/v3"

	"github.com/seidigapbar/beatdlp/model"
)

func Fetch(beatmaker model.Beatmaker, searchService *youtube.Service) ([]model.Instrumental, error) {
	search := searchService.Search.List([]string{"id", "snippet"}).ChannelId(beatmaker.Url).MaxResults(50).Order("date")

	searchResult, err := search.Do()
	
	if err != nil{
		// TODO logs here
		fmt.Println("Error fetching beatmaker data")
		fmt.Println(err)
		return nil, err
	}


	var result []model.Instrumental
	for _, items := range searchResult.Items{

		var beatmakerInstrumental model.Instrumental

		publishedAt, err := time.Parse(time.RFC3339, items.Snippet.PublishedAt)	
		if err != nil {
			fmt.Println("Error parsing date:", err)
			continue
		}

		// Should be generated by the database
		beatmakerInstrumental.Id = items.Id.VideoId
		
		beatmakerInstrumental.CreatedAt = publishedAt
		beatmakerInstrumental.Url = "https://youtube.com/watch?v=" + items.Id.VideoId
		beatmakerInstrumental.Title = items.Snippet.Title
		beatmakerInstrumental.BeatmakerId = beatmaker.Id
		
		// TODO: REDO THE LOGIC HERE
		beatmakerInstrumental.DownloadedAt = time.Now()

		result = append(result, beatmakerInstrumental)
	}

	return result, nil
}